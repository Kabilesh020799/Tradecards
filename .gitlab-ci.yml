variables:
  MAVEN_IMAGE_TAG: "3.8.4"
  NODE_IMAGE_TAG: "20.5.1"

stages:
  - build
  - test
  - deploy

backend_build:
  stage: build
  image: maven:$MAVEN_IMAGE_TAG # Use a Maven image with Java 17
  script:
    - cd backend/tradecards # Navigate to the backend directory
    - mvn clean install
  artifacts:
    paths:
      - backend/tradecards/target/*.jar # Archive the generated JAR file

frontend_build:
  stage: build
  image: node:$NODE_IMAGE_TAG # Use a Node.js image
  script:
    - cd frontend/tradecards_ui # Navigate to the frontend directory
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/tradecards_ui/build # Archive the build directory for deployment

backend_test:
  stage: test
  image: maven:$MAVEN_IMAGE_TAG # Use a Maven image with Java 17
  script:
    - cd backend/tradecards # Navigate to the backend directory
    - mvn test

frontend_test:
  stage: test
  image: node:$NODE_IMAGE_TAG # Use a Node.js image
  script:
    - cd frontend/tradecards_ui # Navigate to the frontend directory
    - npm install
    - npm test

deploy:
  stage: deploy
  script:
    - echo "testing deploy"
    - apt-get update  # Update package list (for Debian/Ubuntu based runners)
    - apt-get install -y openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - ssh student@csci5308vm13.research.cs.dal.ca "mkdir -p /var/www/html/tradecards-ui && mkdir -p /opt/tradecards"
    - scp -r frontend/tradecards_ui/build/* student@csci5308vm13.research.cs.dal.ca:/var/www/html/tradecards-ui
    - scp backend/tradecards/target/*.jar student@csci5308vm13.research.cs.dal.ca:/opt/tradecards
    - ssh student@csci5308vm13.research.cs.dal.ca "cd /opt/tradecards && java -jar /opt/tradecards/tradecards.jar &"

cache:
  paths:
    - backend/tradecards/.m2/repository/ # Cache Maven dependencies
    - frontend/tradecards_ui/node_modules/
