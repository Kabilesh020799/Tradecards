variables:
  MAVEN_IMAGE_TAG: "3.8.4"
  NODE_IMAGE_TAG: "20.5.1"

stages:
  - build
  - test
  - deploy

backend_build:
  stage: build
  image: maven:$MAVEN_IMAGE_TAG # Use a Maven image with Java 17
  script:
    - cd backend/tradecards # Navigate to the backend directory
    - mvn clean install
  artifacts:
    paths:
      - backend/tradecards/target/*.jar # Archive the generated JAR file

frontend_build:
  stage: build
  image: node:$NODE_IMAGE_TAG # Use a Node.js image
  script:
    - cd frontend/tradecards_ui # Navigate to the frontend directory
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/tradecards_ui/build # Archive the build directory for deployment

backend_test:
  stage: test
  image: maven:$MAVEN_IMAGE_TAG # Use a Maven image with Java 17
  script:
    - cd backend/tradecards # Navigate to the backend directory
    - mvn test

frontend_test:
  stage: test
  image: node:$NODE_IMAGE_TAG # Use a Node.js image
  script:
    - echo "testing frontend"
    - cd frontend/tradecards_ui # Navigate to the frontend directory
    - npm install
    - npm test

deploy:
  stage: deploy
  image: kroniak/ssh-client
  script:
    - echo "testing deploy script"
    - chmod 400 "${SSH_PRIVATE_KEY}"
    - scp -o StrictHostKeyChecking=no -i "${SSH_PRIVATE_KEY}" -r frontend/tradecards_ui/build/* student@csci5308vm13.research.cs.dal.ca:~/tradecards-ui
    - scp -o StrictHostKeyChecking=no -i "${SSH_PRIVATE_KEY}" backend/tradecards/target/*.jar student@csci5308vm13.research.cs.dal.ca:~/tradecards
    - ssh -o StrictHostKeyChecking=no -i "${SSH_PRIVATE_KEY}" student@csci5308vm13.research.cs.dal.ca "cd ~/tradecards && java -jar ~/tradecards/tradecards.jar"

cache:
  paths:
    - backend/tradecards/.m2/repository/ # Cache Maven dependencies
    - frontend/tradecards_ui/node_modules/
